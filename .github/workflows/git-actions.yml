name: main/dev

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build images separately for debugging
        run: |
          echo "Building rabbitmq image..."
          docker compose build rabbitmq
          echo "Building app image..."
          docker compose build app
          echo "Listing all images:"
          docker images

      - name: Start services
        run: docker compose up -d

      - name: Verify containers are running
        run: |
          echo "Checking container status..."
          docker ps
          echo "Checking docker compose services..."
          docker compose ps

      - name: Wait for RabbitMQ to be healthy
        run: |
          echo "Aguardando RabbitMQ ficar pronto..."
          RABBITMQ_CONTAINER=$(docker compose ps -q rabbitmq)
          if [ -z "$RABBITMQ_CONTAINER" ]; then
            echo "Erro: Container RabbitMQ não encontrado"
            docker compose ps
            exit 1
          fi
          
          for i in {1..30}; do
            if docker exec $RABBITMQ_CONTAINER rabbitmqctl status > /dev/null 2>&1; then
              echo "RabbitMQ está pronto!"
              break
            fi
            echo "Tentativa $i/30 - RabbitMQ ainda não está pronto..."
            sleep 2
          done

      - name: Test application health
        run: |
          echo "Testando se a aplicação está respondendo..."
          sleep 10  # Aguarda a aplicação subir
          curl -f http://localhost:8080/actuator/health || echo "Health check falhou"

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Container Status ==="
          docker compose ps
          echo "=== All Running Containers ==="
          docker ps -a
          
          echo "=== RabbitMQ Logs ==="
          RABBITMQ_CONTAINER=$(docker compose ps -q rabbitmq)
          if [ -n "$RABBITMQ_CONTAINER" ]; then
            docker logs $RABBITMQ_CONTAINER
          else
            echo "RabbitMQ container not found, checking by name pattern..."
            # Try to find container by name pattern
            RABBITMQ_CONTAINER=$(docker ps -a --filter "name=rabbitmq" --format "{{.ID}}" | head -1)
            if [ -n "$RABBITMQ_CONTAINER" ]; then
              docker logs $RABBITMQ_CONTAINER
            else
              echo "No RabbitMQ container found"
            fi
          fi
          
          echo "=== App Logs ==="
          APP_CONTAINER=$(docker compose ps -q app)
          if [ -n "$APP_CONTAINER" ]; then
            docker logs $APP_CONTAINER
          else
            echo "App container not found, checking by name pattern..."
            # Try to find container by name pattern
            APP_CONTAINER=$(docker ps -a --filter "name=app" --format "{{.ID}}" | head -1)
            if [ -n "$APP_CONTAINER" ]; then
              docker logs $APP_CONTAINER
            else
              echo "No App container found"
            fi
          fi

      - name: Shutdown containers
        if: always()
        run: docker compose down

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Deploy application
        run: |
          docker compose build
          docker compose up -d